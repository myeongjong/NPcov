library(NPcov)
library(ggplot2)
library(RColorBrewer)
library(viridis)
library(gridExtra)
library(grid)
###########################################################################
###
###########################################################################
rm(list = ls())
load(file = "out/simout_covariance_function_estimation.RData")
###########################################################################
###
###########################################################################
visdat_swave  <- data.frame(x = simgrf_swave$coords[, 1], y = simgrf_swave$coords[, 2], z = simgrf_swave$data)
p1            <- ggplot() +
geom_point(data = visdat_swave, aes(x = x, y = y, col = z), size = 2) +
viridis::scale_color_viridis(direction = 1, option = "turbo") +
theme_bw() + xlab("spatial domain dimension 1") + ylab("spatial domain dimension 2") +
theme(legend.title = element_blank(), legend.position = 'top', legend.direction = 'horizontal', legend.key.width = unit(1.25, "cm"))
visdat_swave  <- data.frame(type = c(rep("Our isotropic", length(fit_us_swave$eval)),
rep("Shapiro-Botha", length(sbout_swave$svm$fit$u))),
x = c(fit_us_swave$eval, sbout_swave$svm$fit$u),
y = c(fit_us_swave$yhat * vhat_swave, sbout_swave$svm$sill - sbout_swave$svm$fit$fitted.sv))
p2            <- ggplot() +
geom_point(data = data.frame(x = input_swave$x, y = input_swave$y_err), aes(x = x, y = y), color = "gray75") +
geom_line(data = data.frame(x = input_swave$x, y = input_swave$y), aes(x = x, y = y), color = "black", lwd = 1.25, alpha = 0.75) +
geom_line(data = visdat_swave, aes(x = x, y = y, col = type, lty = type), lwd = 1.2, alpha = 1) +
scale_color_manual(name = NULL, labels = c("Our isotropic" = "Our isotropic", "Shapiro-Botha" = "Shapiro-Botha"), values = c("Our isotropic" = "#E41A1C", "Shapiro-Botha" = "#377EB8")) +
scale_linetype_manual(name = NULL, labels = c("Our isotropic" = "Our isotropic", "Shapiro-Botha" = "Shapiro-Botha"), values = c("Our isotropic" = "twodash", "Shapiro-Botha" = "dotted")) +
geom_hline(yintercept = 0, linetype = "solid", color = "black") +
coord_cartesian(ylim = c(-0.25, 1.05) * sbout_swave$svm$sill) +
theme_bw() + xlab("distance") + ylab("covariance") +
theme(legend.position = "top", legend.direction = 'horizontal', legend.key.width = unit(2, "cm"))
###########################################################################
###
###########################################################################
visdat_sexpo  <- data.frame(x = simgrf_sexpo$coords[, 1], y = simgrf_sexpo$coords[, 2], z = simgrf_sexpo$data)
p3            <- ggplot() +
geom_point(data = visdat_sexpo, aes(x = x, y = y, col = z), size = 2) +
viridis::scale_color_viridis(direction = 1, option = "turbo") +
theme_bw() + xlab("spatial domain dimension 1") + ylab("spatial domain dimension 2") +
theme(legend.title = element_blank(), legend.position = 'top', legend.direction = 'horizontal', legend.key.width = unit(1.25, "cm"))
visdat_sexpo  <- data.frame(type = c(rep("Our monotone", length(fit_us_sexpo$eval)),
rep("Shapiro-Botha", length(sbout_sexpo$svm$fit$u))),
x = c(fit_us_sexpo$eval, sbout_sexpo$svm$fit$u),
y = c(fit_us_sexpo$yhat * vhat_sexpo, sbout_sexpo$svm$sill - sbout_sexpo$svm$fit$fitted.sv))
p4            <- ggplot() +
geom_point(data = data.frame(x = input_sexpo$x, y = input_sexpo$y_err), aes(x = x, y = y), color = "gray75") +
geom_line(data = data.frame(x = input_sexpo$x, y = input_sexpo$y), aes(x = x, y = y), color = "black", lwd = 1.25, alpha = 0.75) +
geom_line(data = visdat_sexpo, aes(x = x, y = y, col = type, lty = type), lwd = 1.2, alpha = 1) +
scale_color_manual(name = NULL, labels = c("Our monotone" = "Our monotone", "Shapiro-Botha" = "Shapiro-Botha"), values = c("Our monotone" = "#4DAF4A", "Shapiro-Botha" = "#377EB8")) +
scale_linetype_manual(name = NULL, labels = c("Our monotone" = "Our monotone", "Shapiro-Botha" = "Shapiro-Botha"), values = c("Our monotone" = "twodash", "Shapiro-Botha" = "dotted")) +
geom_hline(yintercept = 0, linetype = "solid", color = "black") +
coord_cartesian(ylim = c(-0.8, 1.2) * vhat_sexpo) +
theme_bw() + xlab("distance") + ylab("covariance") +
theme(legend.position = "top", legend.direction = 'horizontal', legend.key.width = unit(2, "cm"))
###########################################################################
###
###########################################################################
p.merge.1     <- grid.arrange(p1, p2, nrow = 1, widths = c(2.75, 4.75))
ggplot2::ggsave("img/simulation_covariance_wave.pdf", p.merge.1, device = cairo_pdf, width = 7.5, height = 3.5)
p.merge.2     <- grid.arrange(p3, p4, nrow = 1, widths = c(2.75, 4.75))
ggplot2::ggsave("img/simulation_covariance_expo.pdf", p.merge.2, device = cairo_pdf, width = 7.5, height = 3.5)
###########################################################################
###
###    Author : MYEONGJONG KANG
###    E-mail : kmj.stat@gmail.com
###
###    Description : Visualization - regression with white noise errors
###
###########################################################################
library(NPcov)
library(ggplot2)
library(RColorBrewer)
library(gridExtra)
library(grid)
###########################################################################
###
###########################################################################
rm(list = ls())
load(file = "out/simout_regression_with_white_noise_errors.RData")
rm(ptm1, ptm2)
###########################################################################
###
###########################################################################
idx     <- 1
x       <- result_wave_complex$history_data[[idx]]$x
y       <- result_wave_complex$history_data[[idx]]$y
y_err   <- result_wave_complex$history_data[[idx]]$y_err
fit_lc  <- result_wave_complex$history_fit[[idx]]$fit_lc
fit_ll  <- result_wave_complex$history_fit[[idx]]$fit_ll
fit_us  <- result_wave_complex$history_fit[[idx]]$fit_us
visout_cwave <- data.frame(type = c(rep("Local constant", length(as.numeric(t(fit_lc$eval)))),
rep("Local linear", length(as.numeric(t(fit_ll$eval)))),
rep("Our isotropic", length(fit_us$eval)),
rep("Our monotone", length(fit_us$eval))),
x = c(as.numeric(t(fit_lc$eval)),
as.numeric(t(fit_ll$eval)),
fit_us$eval,
fit_us$eval),
y = c(fit_lc$mean, fit_ll$mean, fit_us$yhat, rep(NA, length(fit_us$eval))))
visout_cwave$type <- factor(visout_cwave$type, levels = c("Our isotropic", "Our monotone", "Local constant", "Local linear"))
p1 <- ggplot() +
geom_point(data = data.frame(x = x, y = y_err), aes(x = x, y = y), color = "gray75") +
geom_line(data = data.frame(x = x, y = y), aes(x = x, y = y), color = "black", lwd = 1.25) +
geom_line(data = visout_cwave, aes(x = x, y = y, col = type, lty = type), lwd = 1.2, alpha = 0.75) +
scale_color_manual(name = NULL, labels = c("Our isotropic" = "Our isotropic", "Our monotone" = "Our monotone", "Local constant" = "Local constant", "Local linear" = "Local linear"), values = c("Our isotropic" = "#E41A1C", "Our monotone" = "#4DAF4A", "Local constant" = "#377EB8", "Local linear" = "#e0e002")) +
scale_linetype_manual(name = NULL, labels = c("Our isotropic" = "Our isotropic", "Our monotone" = "Our monotone", "Local constant" = "Local constant", "Local linear" = "Local linear"), values = c("Our isotropic" = "twodash", "Our monotone" = "twodash", "Local constant" = "dashed", "Local linear" = "dotted")) +
theme_bw() + xlab("x") + ylab("y") +
theme(legend.direction = 'horizontal', legend.key.width = unit(2, "cm"))
rm(idx, x, y, y_err, fit_lc, fit_ll, fit_us)
###########################################################################
###
###########################################################################
idx     <- 6
x       <- result_spherical_complex$history_data[[idx]]$x
y       <- result_spherical_complex$history_data[[idx]]$y
y_err   <- result_spherical_complex$history_data[[idx]]$y_err
fit_lc  <- result_spherical_complex$history_fit[[idx]]$fit_lc
fit_ll  <- result_spherical_complex$history_fit[[idx]]$fit_ll
fit_us  <- result_spherical_complex$history_fit[[idx]]$fit_us
visout_csphe <- data.frame(type = c(rep("Local constant", length(as.numeric(t(fit_lc$eval)))),
rep("Local linear", length(as.numeric(t(fit_ll$eval)))),
rep("Our isotropic", length(fit_us$eval)),
rep("Our monotone", length(fit_us$eval))),
x = c(as.numeric(t(fit_lc$eval)),
as.numeric(t(fit_ll$eval)),
fit_us$eval,
fit_us$eval),
y = c(fit_lc$mean, fit_ll$mean, rep(NA, length(fit_us$eval)), fit_us$yhat))
visout_csphe$type <- factor(visout_csphe$type, levels = c("Our isotropic", "Our monotone", "Local constant", "Local linear"))
p2 <- ggplot() +
geom_point(data = data.frame(x = x, y = y_err), aes(x = x, y = y), color = "gray75") +
geom_line(data = data.frame(x = x, y = y), aes(x = x, y = y), color = "black", lwd = 1.25, alpha = 0.75) +
geom_line(data = visout_csphe, aes(x = x, y = y, col = type, lty = type), lwd = 1.2, alpha = 0.75) +
scale_color_manual(name = NULL, labels = c("Our isotropic" = "Our isotropic", "Our monotone" = "Our monotone", "Local constant" = "Local constant", "Local linear" = "Local linear"), values = c("Our isotropic" = "#E41A1C", "Our monotone" = "#4DAF4A", "Local constant" = "#377EB8", "Local linear" = "#e0e002")) +
scale_linetype_manual(name = NULL, labels = c("Our isotropic" = "Our isotropic", "Our monotone" = "Our monotone", "Local constant" = "Local constant", "Local linear" = "Local linear"), values = c("Our isotropic" = "twodash", "Our monotone" = "twodash", "Local constant" = "dashed", "Local linear" = "dotted")) +
theme_bw() + xlab("x") + ylab("y") +
theme(legend.direction = 'horizontal', legend.key.width = unit(2, "cm"))
tmp       <- ggplot_gtable(ggplot_build(p1))
leg       <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
mylegend  <- tmp$grobs[[leg]]
### Merge the two plots ###
p.merge    <- grid.arrange(mylegend, arrangeGrob(p1 + theme(legend.position = "none"),
p2 + theme(legend.position = "none"),
ncol = 2), nrow = 2, heights = c(1, 10))
ggplot2::ggsave("img/simulation_regression.pdf", p.merge, device = cairo_pdf, width = 7.5, height = 3.5)
###########################################################################
###
###    Author : MYEONGJONG KANG
###    E-mail : kmj.stat@gmail.com
###
###    Description : Visualization
###
###########################################################################
library(NPcov)
library(ggplot2)
library(RColorBrewer)
library(gridExtra)
library(grid)
###########################################################################
### simulation 1: simple wave
###########################################################################
rm(list = ls())
set.seed(10182022)
x           <- sort(runif(200, min = 0.1, max = 10))
y           <- ftn_wave(x, 0, 1, 1)
y           <- 1 - y
y_err       <- y + rnorm(length(y), 0, 0.2)
load(file = "out/simout_gaussian_wave_simple.RData")
#####
# plot(x, y_err, xlab = "x", ylab = "y")
# lines(x, y, col = "black")
# lines(bestout$eval, bestout$yhat, col = "red")
#####
visout1     <- data.frame(x = bestout$eval, y = bestout$yhat)
p1          <- ggplot() +
geom_point(data = data.frame(x = x, y = y_err), aes(x = x, y = y), color = "gray75") +
geom_line(data = data.frame(x = x, y = y), aes(x = x, y = y), color = "black", lwd = 1.25, alpha = 0.75) +
geom_line(data = visout1, aes(x = x, y = y), color = "#E41A1C", lty = "twodash", lwd = 1.2) +
scale_x_continuous(expand = c(0,0), limits = c(0, 10.25)) +
theme_bw() + xlab("x") + ylab("y") +
theme(legend.direction = 'horizontal', legend.key.width = unit(2, "cm"))
visout2     <- rbind(data.frame(type = "min", x = seq(bestout$iteration + 1), y = bestout$history_obj_min),
data.frame(type = "maxsel", x = seq(bestout$iteration + 1), y = bestout$history_obj_max_sel),
data.frame(type = "mean", x = seq(bestout$iteration + 1), y = bestout$history_obj_mean),
data.frame(type = "maxall", x = seq(bestout$iteration + 1), y = bestout$history_obj_max))
p2          <- ggplot() +
geom_line(data = visout2, aes(x = x, y = y, lty = type), color = "black", lwd = 1) +
scale_linetype_manual(values = c("min" = "twodash", "maxsel" = "solid", "mean" = "dashed", "maxall" = "dotted")) +
theme_bw() + xlab("iteration") + ylab("objective value") + coord_cartesian(ylim = range(visout2$y[visout2$type != "maxall"])) +
theme(legend.position = "none")
visout3     <- data.frame(x = seq(bestout$iteration + 1), y = bestout$history_KL)
p3          <- ggplot() +
geom_line(data = visout3, aes(x = x, y = y), color = "black", lwd = 1) +
theme_bw() + xlab("iteration") + ylab("KL divergence") +
theme(legend.position = "none")
p.merge     <- grid.arrange(p1, p2, p3, nrow = 1)
ggplot2::ggsave("img/simulation_convergence_wave_simple.pdf", p.merge, device = cairo_pdf, width = 7.5, height = 3.5)
###########################################################################
### simulation 2: complex wave
###########################################################################
rm(list = ls())
set.seed(10182022)
x           <- sort(runif(200, min = 0.1, max = 10))
y           <- ftn_wave(x, 0, 1, 0.5)
y           <- 1 - y
y_err       <- y + rnorm(length(y), 0, 0.2)
load(file = "out/simout_gaussian_wave_complex.RData")
#####
# plot(x, y_err, xlab = "x", ylab = "y")
# lines(x, y, col = "black")
# lines(bestout$eval, bestout$yhat, col = "red")
#####
visout1     <- data.frame(x = bestout$eval, y = bestout$yhat)
p1          <- ggplot() +
geom_point(data = data.frame(x = x, y = y_err), aes(x = x, y = y), color = "gray75") +
geom_line(data = data.frame(x = x, y = y), aes(x = x, y = y), color = "black", lwd = 1.25, alpha = 0.75) +
geom_line(data = visout1, aes(x = x, y = y), color = "#E41A1C", lty = "twodash", lwd = 1.2) +
scale_x_continuous(expand = c(0,0), limits = c(0, 10.25)) +
theme_bw() + xlab("x") + ylab("y") +
theme(legend.direction = 'horizontal', legend.key.width = unit(2, "cm"))
visout2     <- rbind(data.frame(type = "min", x = seq(bestout$iteration + 1), y = bestout$history_obj_min),
data.frame(type = "maxsel", x = seq(bestout$iteration + 1), y = bestout$history_obj_max_sel),
data.frame(type = "mean", x = seq(bestout$iteration + 1), y = bestout$history_obj_mean),
data.frame(type = "maxall", x = seq(bestout$iteration + 1), y = bestout$history_obj_max))
p2          <- ggplot() +
geom_line(data = visout2, aes(x = x, y = y, lty = type), color = "black", lwd = 1) +
scale_linetype_manual(values = c("min" = "twodash", "maxsel" = "solid", "mean" = "dashed", "maxall" = "dotted")) +
theme_bw() + xlab("iteration") + ylab("objective value") + coord_cartesian(ylim = range(visout2$y[visout2$type != "maxall"])) +
theme(legend.position = "none")
visout3     <- data.frame(x = seq(bestout$iteration + 1), y = bestout$history_KL)
p3          <- ggplot() +
geom_line(data = visout3, aes(x = x, y = y), color = "black", lwd = 1) +
theme_bw() + xlab("iteration") + ylab("KL divergence") +
theme(legend.position = "none")
p.merge     <- grid.arrange(p1, p2, p3, nrow = 1)
ggplot2::ggsave("img/simulation_convergence_wave_complex.pdf", p.merge, device = cairo_pdf, width = 7.5, height = 3.5)
###########################################################################
### simulation 3: simple spherical case
###########################################################################
rm(list = ls())
set.seed(10182022)
x           <- sort(runif(200, min = 0.1, max = 10))
y           <- ftn_spherical(x, 0, 1, 1)
y           <- 1 - y
y_err       <- y + rnorm(length(y), 0, 0.2)
load(file = "out/simout_gaussian_sphe_simple.RData")
#####
# plot(x, y_err, xlab = "x", ylab = "y")
# lines(x, y, col = "black")
# lines(bestout$eval, bestout$yhat, col = "red")
#####
visout1     <- data.frame(x = bestout$eval, y = bestout$yhat)
p1          <- ggplot() +
geom_point(data = data.frame(x = x, y = y_err), aes(x = x, y = y), color = "gray75") +
geom_line(data = data.frame(x = x, y = y), aes(x = x, y = y), color = "black", lwd = 1.25, alpha = 0.75) +
geom_line(data = visout1, aes(x = x, y = y), color = "#4DAF4A", lty = "twodash", lwd = 1.2) +
scale_x_continuous(expand = c(0,0), limits = c(0, 10.25)) +
theme_bw() + xlab("x") + ylab("y") +
theme(legend.direction = 'horizontal', legend.key.width = unit(2, "cm"))
visout2     <- rbind(data.frame(type = "min", x = seq(bestout$iteration + 1), y = bestout$history_obj_min),
data.frame(type = "maxsel", x = seq(bestout$iteration + 1), y = bestout$history_obj_max_sel),
data.frame(type = "mean", x = seq(bestout$iteration + 1), y = bestout$history_obj_mean),
data.frame(type = "maxall", x = seq(bestout$iteration + 1), y = bestout$history_obj_max))
p2          <- ggplot() +
geom_line(data = visout2, aes(x = x, y = y, lty = type), color = "black", lwd = 1) +
scale_linetype_manual(values = c("min" = "twodash", "maxsel" = "solid", "mean" = "dashed", "maxall" = "dotted")) +
theme_bw() + xlab("iteration") + ylab("objective value") + coord_cartesian(ylim = range(visout2$y[visout2$type != "maxall"])) +
theme(legend.position = "none")
visout3     <- data.frame(x = seq(bestout$iteration + 1), y = bestout$history_KL)
p3          <- ggplot() +
geom_line(data = visout3, aes(x = x, y = y), color = "black", lwd = 1) +
theme_bw() + xlab("iteration") + ylab("KL divergence") +
theme(legend.position = "none")
p.merge     <- grid.arrange(p1, p2, p3, nrow = 1)
ggplot2::ggsave("img/simulation_convergence_sphe_simple.pdf", p.merge, device = cairo_pdf, width = 7.5, height = 3.5)
###########################################################################
### simulation 4: complex spherical case
###########################################################################
rm(list = ls())
set.seed(10182022)
x           <- sort(runif(200, min = 0.1, max = 10))
y           <- ftn_spherical(x, 0, 0.8, 2)
y           <- 1 - y
y_err       <- y + rnorm(length(y), 0, 0.2)
load(file = "out/simout_gaussian_sphe_complex.RData")
#####
# plot(x, y_err, xlab = "x", ylab = "y")
# lines(x, y, col = "black")
# lines(bestout$eval, bestout$yhat, col = "red")
#####
visout1     <- data.frame(x = bestout$eval, y = bestout$yhat)
p1          <- ggplot() +
geom_point(data = data.frame(x = x, y = y_err), aes(x = x, y = y), color = "gray75") +
geom_line(data = data.frame(x = x, y = y), aes(x = x, y = y), color = "black", lwd = 1.25, alpha = 0.75) +
geom_line(data = visout1, aes(x = x, y = y), color = "#4DAF4A", lty = "twodash", lwd = 1.2) +
scale_x_continuous(expand = c(0,0), limits = c(0, 10.25)) +
theme_bw() + xlab("x") + ylab("y") +
theme(legend.direction = 'horizontal', legend.key.width = unit(2, "cm"))
visout2     <- rbind(data.frame(type = "min", x = seq(bestout$iteration + 1), y = bestout$history_obj_min),
data.frame(type = "maxsel", x = seq(bestout$iteration + 1), y = bestout$history_obj_max_sel),
data.frame(type = "mean", x = seq(bestout$iteration + 1), y = bestout$history_obj_mean),
data.frame(type = "maxall", x = seq(bestout$iteration + 1), y = bestout$history_obj_max))
p2          <- ggplot() +
geom_line(data = visout2, aes(x = x, y = y, lty = type), color = "black", lwd = 1) +
scale_linetype_manual(values = c("min" = "twodash", "maxsel" = "solid", "mean" = "dashed", "maxall" = "dotted")) +
theme_bw() + xlab("iteration") + ylab("objective value") + coord_cartesian(ylim = range(visout2$y[visout2$type != "maxall"]) + c(0, 5)) +
theme(legend.position = "none")
visout3     <- data.frame(x = seq(bestout$iteration + 1), y = bestout$history_KL)
p3          <- ggplot() +
geom_line(data = visout3, aes(x = x, y = y), color = "black", lwd = 1) +
theme_bw() + xlab("iteration") + ylab("KL divergence") +
theme(legend.position = "none")
p.merge     <- grid.arrange(p1, p2, p3, nrow = 1)
ggplot2::ggsave("img/simulation_convergence_sphe_complex.pdf", p.merge, device = cairo_pdf, width = 7.5, height = 3.5)
###########################################################################
### simulation 5: simple exponential case
###########################################################################
rm(list = ls())
set.seed(10182022)
x           <- sort(runif(200, min = 0.1, max = 10))
y           <- ftn_exponential(x, 0, 1, 1)
y           <- 1 - y
y_err       <- y + rnorm(length(y), 0, 0.2)
load(file = "out/simout_gaussian_expo_simple.RData")
#####
# plot(x, y_err, xlab = "x", ylab = "y")
# lines(x, y, col = "black")
# lines(bestout$eval, bestout$yhat, col = "red")
#####
visout1     <- data.frame(x = bestout$eval, y = bestout$yhat)
p1          <- ggplot() +
geom_point(data = data.frame(x = x, y = y_err), aes(x = x, y = y), color = "gray75") +
geom_line(data = data.frame(x = x, y = y), aes(x = x, y = y), color = "black", lwd = 1.25, alpha = 0.75) +
geom_line(data = visout1, aes(x = x, y = y), color = "#4DAF4A", lty = "twodash", lwd = 1.2) +
scale_x_continuous(expand = c(0,0), limits = c(0, 10.25)) +
theme_bw() + xlab("x") + ylab("y") +
theme(legend.direction = 'horizontal', legend.key.width = unit(2, "cm"))
visout2     <- rbind(data.frame(type = "min", x = seq(bestout$iteration + 1), y = bestout$history_obj_min),
data.frame(type = "maxsel", x = seq(bestout$iteration + 1), y = bestout$history_obj_max_sel),
data.frame(type = "mean", x = seq(bestout$iteration + 1), y = bestout$history_obj_mean),
data.frame(type = "maxall", x = seq(bestout$iteration + 1), y = bestout$history_obj_max))
p2          <- ggplot() +
geom_line(data = visout2, aes(x = x, y = y, lty = type), color = "black", lwd = 1) +
scale_linetype_manual(values = c("min" = "twodash", "maxsel" = "solid", "mean" = "dashed", "maxall" = "dotted")) +
theme_bw() + xlab("iteration") + ylab("objective value") + coord_cartesian(ylim = range(visout2$y[visout2$type != "maxall"])) +
theme(legend.position = "none")
visout3     <- data.frame(x = seq(bestout$iteration + 1), y = bestout$history_KL)
p3          <- ggplot() +
geom_line(data = visout3, aes(x = x, y = y), color = "black", lwd = 1) +
theme_bw() + xlab("iteration") + ylab("KL divergence") +
theme(legend.position = "none")
p.merge     <- grid.arrange(p1, p2, p3, nrow = 1)
ggplot2::ggsave("img/simulation_convergence_expo_simple.pdf", p.merge, device = cairo_pdf, width = 7.5, height = 3.5)
###########################################################################
### simulation 6: complex exponential case
###########################################################################
rm(list = ls())
set.seed(10182022)
x           <- sort(runif(200, min = 0.1, max = 10))
y           <- ftn_exponential(x, 0, 1, 4)
y           <- 1 - y
y_err       <- y + rnorm(length(y), 0, 0.2)
load(file = "out/simout_gaussian_expo_complex.RData")
#####
# plot(x, y_err, xlab = "x", ylab = "y")
# lines(x, y, col = "black")
# lines(bestout$eval, bestout$yhat, col = "red")
#####
visout1     <- data.frame(x = bestout$eval, y = bestout$yhat)
p1          <- ggplot() +
geom_point(data = data.frame(x = x, y = y_err), aes(x = x, y = y), color = "gray75") +
geom_line(data = data.frame(x = x, y = y), aes(x = x, y = y), color = "black", lwd = 1.25, alpha = 0.75) +
geom_line(data = visout1, aes(x = x, y = y), color = "#4DAF4A", lty = "twodash", lwd = 1.2) +
scale_x_continuous(expand = c(0,0), limits = c(0, 10.25)) +
theme_bw() + xlab("x") + ylab("y") +
theme(legend.direction = 'horizontal', legend.key.width = unit(2, "cm"))
visout2     <- rbind(data.frame(type = "min", x = seq(bestout$iteration + 1), y = bestout$history_obj_min),
data.frame(type = "maxsel", x = seq(bestout$iteration + 1), y = bestout$history_obj_max_sel),
data.frame(type = "mean", x = seq(bestout$iteration + 1), y = bestout$history_obj_mean),
data.frame(type = "maxall", x = seq(bestout$iteration + 1), y = bestout$history_obj_max))
p2          <- ggplot() +
geom_line(data = visout2, aes(x = x, y = y, lty = type), color = "black", lwd = 1) +
scale_linetype_manual(values = c("min" = "twodash", "maxsel" = "solid", "mean" = "dashed", "maxall" = "dotted")) +
theme_bw() + xlab("iteration") + ylab("objective value") + coord_cartesian(ylim = range(visout2$y[visout2$type != "maxall"])) +
theme(legend.position = "none")
visout3     <- data.frame(x = seq(bestout$iteration + 1), y = bestout$history_KL)
p3          <- ggplot() +
geom_line(data = visout3, aes(x = x, y = y), color = "black", lwd = 1) +
theme_bw() + xlab("iteration") + ylab("KL divergence") +
theme(legend.position = "none")
p.merge     <- grid.arrange(p1, p2, p3, nrow = 1)
ggplot2::ggsave("img/simulation_convergence_expo_complex.pdf", p.merge, device = cairo_pdf, width = 7.5, height = 3.5)
###########################################################################
###
###    Author : MYEONGJONG KANG
###    E-mail : kmj.stat@gmail.com
###
###    Description : Visualization
###
###########################################################################
library(NPcov)
library(ggplot2)
library(RColorBrewer)
library(gridExtra)
library(grid)
###########################################################################
###
###########################################################################
rm(list = ls())
set.seed(10182022)
x           <- sort(runif(200, min = 0.1, max = 10))
y           <- ftn_wave(x, 0, 1, 0.5)
y           <- 1 - y
y_err       <- y + rnorm(length(y), 0, 0.2)
load(file = "out/simout_gaussian_wave_complex.RData")
cvout_gaussian_cwave <- cvout
bestout_gaussian_cwave <- bestout
load(file = "out/simout_epan_wave_complex.RData")
cvout_epan_cwave <- cvout
bestout_epan_cwave <- bestout
load(file = "out/simout_uniform_wave_complex.RData")
cvout_uniform_cwave <- cvout
bestout_uniform_cwave <- bestout
rm(cvout, bestout, ptm_cv, ptm_best)
###
plot(x, y_err, xlab = "x", ylab = "y")
lines(x, y, col = "black")
lines(bestout_uniform_cwave$eval, bestout_uniform_cwave$yhat, col = "green")
lines(bestout_epan_cwave$eval, bestout_epan_cwave$yhat, col = "blue")
lines(bestout_gaussian_cwave$eval, bestout_gaussian_cwave$yhat, col = "red")
###
visout_cwave <- data.frame(type = c(rep("Uniform", length(bestout_uniform_cwave$eval)),
rep("Epanechnikov", length(bestout_epan_cwave$eval)),
rep("Gaussian", length(bestout_gaussian_cwave$eval))),
x = c(bestout_uniform_cwave$eval,
bestout_epan_cwave$eval,
bestout_gaussian_cwave$eval),
y = c(bestout_uniform_cwave$yhat,
bestout_epan_cwave$yhat,
bestout_gaussian_cwave$yhat))
visout_cwave$type <- factor(visout_cwave$type, levels = c("Gaussian", "Epanechnikov", "Uniform"))
p1 <- ggplot() +
geom_point(data = data.frame(x = x, y = y_err), aes(x = x, y = y), color = "gray75") +
geom_line(data = data.frame(x = x, y = y), aes(x = x, y = y), color = "black", lwd = 1.25) +
geom_line(data = visout_cwave, aes(x = x, y = y, col = type, lty = type), lwd = 1.2, alpha = 0.75) +
scale_x_continuous(expand = c(0,0), limits = c(0, 10.25)) +
scale_color_manual(name = NULL, labels = c("Gaussian" = "Gaussian", "Epanechnikov" = "Epanechnikov", "Uniform" = "Uniform"), values = c("Gaussian" = "#E41A1C", "Epanechnikov" = "#4DAF4A", "Uniform" = "#377EB8")) +
scale_linetype_manual(name = NULL, labels = c("Gaussian" = "Gaussian", "Epanechnikov" = "Epanechnikov", "Uniform" = "Uniform"), values = c("Gaussian" = "twodash", "Epanechnikov" = "dashed", "Uniform" = "dotted")) +
theme_bw() + xlab("x") + ylab("y") +
theme(legend.direction = 'horizontal', legend.key.width = unit(2, "cm"))
###########################################################################
###
###########################################################################
set.seed(10182022)
x           <- sort(runif(200, min = 0.1, max = 10))
y           <- ftn_spherical(x, 0, 0.8, 2)
y           <- 1 - y
y_err       <- y + rnorm(length(y), 0, 0.2)
load(file = "out/simout_gaussian_sphe_complex.RData")
cvout_gaussian_csphe <- cvout
bestout_gaussian_csphe <- bestout
load(file = "out/simout_epan_sphe_complex.RData")
cvout_epan_csphe <- cvout
bestout_epan_csphe <- bestout
load(file = "out/simout_uniform_sphe_complex.RData")
cvout_uniform_csphe <- cvout
bestout_uniform_csphe <- bestout
rm(cvout, bestout, ptm_cv, ptm_best)
###
plot(x, y_err, xlab = "x", ylab = "y")
lines(x, y, col = "black")
lines(bestout_uniform_csphe$eval, bestout_uniform_csphe$yhat, col = "green")
lines(bestout_epan_csphe$eval, bestout_epan_csphe$yhat, col = "blue")
lines(bestout_gaussian_csphe$eval, bestout_gaussian_csphe$yhat, col = "red")
###
visout_csphe <- data.frame(type = c(rep("Uniform", length(bestout_uniform_csphe$eval)),
rep("Epanechnikov", length(bestout_epan_csphe$eval)),
rep("Gaussian", length(bestout_gaussian_csphe$eval))),
x = c(bestout_uniform_csphe$eval,
bestout_epan_csphe$eval,
bestout_gaussian_csphe$eval),
y = c(bestout_uniform_csphe$yhat,
bestout_epan_csphe$yhat,
bestout_gaussian_csphe$yhat))
visout_csphe$type <- factor(visout_csphe$type, levels = c("Gaussian", "Epanechnikov", "Uniform"))
p2 <- ggplot() +
geom_point(data = data.frame(x = x, y = y_err), aes(x = x, y = y), color = "gray75") +
geom_line(data = data.frame(x = x, y = y), aes(x = x, y = y), color = "black", lwd = 1.25) +
geom_line(data = visout_csphe, aes(x = x, y = y, col = type, lty = type), lwd = 1.2, alpha = 0.75) +
scale_x_continuous(expand = c(0,0), limits = c(0, 10.25)) +
scale_color_manual(name = NULL, labels = c("Gaussian" = "Gaussian", "Epanechnikov" = "Epanechnikov", "Uniform" = "Uniform"), values = c("Gaussian" = "#E41A1C", "Epanechnikov" = "#377EB8", "Uniform" = "#4DAF4A")) +
scale_linetype_manual(name = NULL, labels = c("Gaussian" = "Gaussian", "Epanechnikov" = "Epanechnikov", "Uniform" = "Uniform"), values = c("Gaussian" = "twodash", "Epanechnikov" = "dashed", "Uniform" = "dotted")) +
theme_bw() + xlab("x") + ylab("y") +
theme(legend.direction = 'horizontal', legend.key.width = unit(2, "cm"))
###########################################################################
###
###########################################################################
tmp       <- ggplot_gtable(ggplot_build(p1))
leg       <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
mylegend  <- tmp$grobs[[leg]]
### Merge the two plots ###
p.merge    <- grid.arrange(mylegend, arrangeGrob(p1 + theme(legend.position = "none"),
p2 + theme(legend.position = "none"),
ncol = 2), nrow = 2, heights = c(1, 10))
ggplot2::ggsave("img/simulation_kernels.pdf", p.merge, device = cairo_pdf, width = 7.5, height = 3.5)
>usethis::use_package()
?usethis::use_package()
usethis::use_package("Cairo", type = "Suggests")
library(NPcov)
